{"version":3,"sources":["componentes/VerUsuarios.js","componentes/CargaUsuario.js","componentes/Query.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["CargaPost","useState","lista","setLista","getProductos","a","axios","get","res","data","console","log","useEffect","className","map","producto","id","nombre","rol","activo","setNombre","setRol","id_rol","setIdRol","setActivo","setId","bandera","setBandera","obj","post","e","put","addUpdate","preventDefault","addProducto","UpdateProducto","window","confirm","delete","getRol","type","placeholder","onChange","target","value","name","onClick","deleteProducto","getProducto","Query","query","setQuery","getQuery","App","state","ClaroOscuro","this","to","activeClassName","exact","path","VerUsuarios","CargaUsuario","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d40dc84.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaCheckCircle, FaTrash, FaPen } from 'react-icons/fa'; // npm i react-icons\r\nimport axios from 'axios'; // npm i axios\r\n\r\nfunction CargaPost() {\r\n\r\n  const [lista, setLista] = useState([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [rol, setRol] = useState('');\r\n  const [id_rol, setIdRol] = useState('');\r\n  const [activo, setActivo] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [bandera, setBandera] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getProductos();\r\n  }, [])\r\n\r\n  async function getProductos() {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/');\r\n    setLista(res.data)\r\n    console.log(res.data)\r\n  }\r\n\r\n  async function addProducto() {\r\n    const obj = { nombre, id_rol, activo };\r\n    const res = await axios.post('http://purosoft.net/apirest_codesa/', obj);\r\n    console.log(res.data)\r\n    getProductos();\r\n  }\r\n\r\n  async function UpdateProducto(e) {\r\n    const obj = { id, nombre, id_rol, activo };\r\n    const res = await axios.put('http://purosoft.net/apirest_codesa/', obj);\r\n    console.log(res.data)\r\n    getProductos();\r\n\r\n  }\r\n\r\n  function addUpdate(e) {\r\n    e.preventDefault();\r\n    bandera ? addProducto() : UpdateProducto();\r\n    limpiarEstado();\r\n  }\r\n\r\n  async function deleteProducto(id) {\r\n\r\n    if (window.confirm('Quieres eliminar?')) {\r\n      const res = await axios.delete('http://purosoft.net/apirest_codesa/?id=' + id);\r\n      getProductos();\r\n      console.log(res.data)\r\n    }\r\n  }\r\n\r\n  async function getProducto(id) {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/?id=' + id);\r\n    setId(res.data.id);\r\n    setNombre(res.data.nombre);\r\n    setIdRol(res.data.id_rol);\r\n    setRol(res.data.rol);\r\n    setActivo(res.data.activo);\r\n    setBandera(false)\r\n  }\r\n\r\n  function limpiarEstado() {\r\n    setId('');\r\n    setNombre('');\r\n    setRol('');\r\n    setIdRol('');\r\n    setActivo('');\r\n    setBandera(true);\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"container \">\r\n\r\n      \r\n      <div className=\"col-md-12 p-2\">\r\n        {lista.map(producto => (\r\n          <div className=\"card p-2 mt-2 border-primary\" key={producto.id}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"text-primary\"> Usuario: </h5><hr />\r\n              <h1> ID:{producto.id} - {producto.nombre}</h1> <hr />\r\n              <h2> Rol: {producto.rol}</h2> <hr />\r\n              <h2> Estado: {producto.activo}</h2> <hr />\r\n              \r\n               <hr />\r\n              <div className=\"d-flex flex-row-reverse\" >\r\n                \r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default CargaPost;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaCheckCircle, FaTrash, FaPen } from 'react-icons/fa'; // npm i react-icons\r\nimport axios from 'axios'; // npm i axios\r\n\r\n\r\nfunction CargaPost() {\r\n\r\n  const [lista, setLista] = useState([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [rol, setRol] = useState([]);\r\n  const [id_rol, setIdRol] = useState('');\r\n  const [activo, setActivo] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [bandera, setBandera] = useState(true);\r\n\r\n  \r\n  useEffect(() => {\r\n    getProductos();\r\n    getRol();\r\n  }, [])\r\n\r\n  async function getProductos() {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/');\r\n    setLista(res.data)\r\n    console.log(res.data)\r\n  }\r\n\r\n  async function getRol() {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/index2.php');\r\n    setRol(res.data)\r\n    console.log(res.data)\r\n  }\r\n\r\n  async function addProducto() {\r\n    const obj = { nombre, id_rol, activo };\r\n    const res = await axios.post('http://purosoft.net/apirest_codesa/', obj);\r\n    console.log(res.data)\r\n    getProductos();\r\n  }\r\n\r\n  async function UpdateProducto(e) {\r\n    const obj = { id, nombre, id_rol, activo };\r\n    const res = await axios.put('http://purosoft.net/apirest_codesa/', obj);\r\n    console.log(res.data)\r\n    getProductos();\r\n\r\n  }\r\n\r\n  function addUpdate(e) {\r\n    e.preventDefault();\r\n    bandera ? addProducto() : UpdateProducto();\r\n    limpiarEstado();\r\n  }\r\n\r\n  async function deleteProducto(id) {\r\n\r\n    if (window.confirm('Quieres eliminar?')) {\r\n      const res = await axios.delete('http://purosoft.net/apirest_codesa/?id=' + id);\r\n      getProductos();\r\n      console.log(res.data)\r\n    }\r\n  }\r\n\r\n  async function getProducto(id) {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/?id=' + id);\r\n    setId(res.data.id);\r\n    setNombre(res.data.nombre);\r\n    setIdRol(res.data.id_rol);\r\n    setActivo(res.data.activo);\r\n    setBandera(false)\r\n  }\r\n\r\n  function limpiarEstado() {\r\n    setId('');\r\n    setNombre('');\r\n    setIdRol('');\r\n    setActivo('');\r\n    setBandera(true);\r\n  }\r\n\r\n \r\n  return (\r\n\r\n    <div className=\"container \">\r\n\r\n      <div className=\"col-md-12 p-2 \">\r\n        <form className=\"card p-2 mt-3 border-secondary\">\r\n          <h2>Crear Usuario</h2>\r\n          <div className=\"form-group\">\r\n            Nombres: <input type=\"text\" placeholder=\"Nombre\" className=\"form-control\"\r\n              onChange={(e) => setNombre(e.target.value)}\r\n              value={nombre} /></div>\r\n\r\n          <div className=\"form-group\">\r\n           {/* Rol: <input type=\"text\" placeholder=\"Id_rol\" className=\"form-control\"\r\n              onChange={(e) => setIdRol(e.target.value)}\r\n              value={id_rol} /> */}\r\n              Rol:\r\n              <select name=\"roles\" className=\"form-control\" onChange={(e) => setIdRol(e.target.value)}>\r\n                <option >Seleccione..</option>\r\n                {rol.map(e =>(\r\n                  <option key={e.id_rol} value={e.id_rol}>{e.nombre}</option>\r\n                )\r\n                )}\r\n              </select>\r\n              </div>\r\n          <div className=\"form-group\">\r\n            Estado:  \r\n            \r\n            {/* \r\n              <input type=\"text\" placeholder=\"activo\" className=\"form-control\"\r\n              onChange={(e) => setActivo(e.target.value)}\r\n              value={activo} /> \r\n              <Select \r\n              onInputChange={(e) => setActivo(e.target.value)}\r\n              value={activo} \r\n              options={optionsActivo} />\r\n\r\n              <Select \r\n              options={optionsActivo}\r\n              onChange={(e) => setActivo(e.value)}\r\n              /> */}\r\n              <select name=\"select_activo\" className=\"form-control\" onChange={(e) => setActivo(e.target.value)}>\r\n                <option >Seleccione..</option>\r\n                <option value=\"1\">Activo</option>\r\n                <option value=\"0\">Inactivo</option>\r\n              </select>\r\n              </div>\r\n\r\n          <button className=\"btn btn-outline-success btn-sm\"\r\n            onClick={(e) => addUpdate(e)} >\r\n            {bandera ? \"Agregar\" : \"Editar\"}\r\n            <FaCheckCircle /></button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"col-md-12 p-2\">\r\n        {lista.map(producto => (\r\n          <div className=\"card p-2 mt-2 border-primary\" key={producto.id}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"text-primary\"> Usuario: </h5><hr />\r\n              <h1> ID:{producto.id} - {producto.nombre}</h1> <hr />\r\n              <h2> Rol: {producto.rol}</h2> <hr />\r\n              <h2> Estado: {(producto.activo == 1) ? 'Activo' : 'Inactivo'}</h2> <hr />\r\n              \r\n               <hr />\r\n              <div className=\"d-flex flex-row-reverse\" >\r\n                <button className=\"btn btn-outline-danger btn-sm \"\r\n                  onClick={() => deleteProducto(producto.id)} ><FaTrash />\r\n                </button>\r\n                <button className=\"btn btn-outline-secondary btn-sm mr-2\"\r\n                  onClick={() => getProducto(producto.id)} ><FaPen />\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default CargaPost;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaCheckCircle, FaTrash, FaPen, FaSearch } from 'react-icons/fa'; // npm i react-icons\r\nimport axios from 'axios'; // npm i axios\r\n\r\n\r\nfunction Query() {\r\n\r\n  const [lista, setLista] = useState([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [query, setQuery] = useState('');\r\n  const [rol, setRol] = useState([]);\r\n  const [id_rol, setIdRol] = useState('');\r\n  const [activo, setActivo] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [bandera, setBandera] = useState(true);\r\n\r\n  \r\n  useEffect(() => {\r\n    getProductos();\r\n    getRol();\r\n  }, [])\r\n\r\n  async function getProductos() {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/');\r\n    setLista(res.data)\r\n    console.log(res.data)\r\n  }\r\n\r\n  async function getRol() {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/index2.php');\r\n    setRol(res.data)\r\n    console.log(res.data)\r\n  }\r\n\r\n  async function addProducto() {\r\n    const obj = { nombre, id_rol, activo };\r\n    const res = await axios.post('http://purosoft.net/apirest_codesa/', obj);\r\n    console.log(res.data)\r\n    getProductos();\r\n  }\r\n\r\n  async function UpdateProducto(e) {\r\n    const obj = { id, nombre, id_rol, activo };\r\n    const res = await axios.put('http://purosoft.net/apirest_codesa/', obj);\r\n    console.log(res.data)\r\n    getProductos();\r\n\r\n  }\r\n\r\n  function addUpdate(e) {\r\n    e.preventDefault();\r\n    bandera ? addProducto() : UpdateProducto();\r\n    limpiarEstado();\r\n  }\r\n\r\n  async function deleteProducto(id) {\r\n\r\n    if (window.confirm('Quieres eliminar?')) {\r\n      const res = await axios.delete('http://purosoft.net/apirest_codesa/?id=' + id);\r\n      getProductos();\r\n      console.log(res.data)\r\n    }\r\n  }\r\n\r\n  async function getProducto(id) {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/index4.php?q=' + id);\r\n    setId(res.data.id);\r\n    setNombre(res.data.nombre);\r\n    setIdRol(res.data.id_rol);\r\n    setActivo(res.data.activo);\r\n    setBandera(false)\r\n  }\r\n\r\n  async function getQuery(id) {\r\n    const res = await axios.get('http://purosoft.net/apirest_codesa/index4.php?q=' + id);\r\n    setLista(res.data)\r\n  }\r\n\r\n  function limpiarEstado() {\r\n    setId('');\r\n    setNombre('');\r\n    setIdRol('');\r\n    setActivo('');\r\n    setBandera(true);\r\n  }\r\n\r\n \r\n  return (\r\n\r\n    <div className=\"container \">\r\n              \r\n              <div>\r\n                <input type=\"text\" placeholder=\"Busqueda\" className=\"form-control\"\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                value={query} />\r\n                <br/>\r\n                <button className=\"btn btn-lg btn-danger btn-block\"\r\n                onClick={() => getQuery(query)} ><FaSearch />\r\n                </button>\r\n              </div>\r\n\r\n\r\n     \r\n\r\n      <div className=\"col-md-12 p-2\">\r\n        {lista.map(producto => (\r\n          <div className=\"card p-2 mt-2 border-primary\" key={producto.id}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"text-primary\"> Usuario: </h5><hr />\r\n              <h1> ID:{producto.id} - {producto.nombre}</h1> <hr />\r\n              <h2> Rol: {producto.rol}</h2> <hr />\r\n              <h2> Estado: {(producto.activo == 1) ? 'Activo' : 'Inactivo'}</h2> <hr />\r\n              \r\n               <hr />\r\n              <div className=\"d-flex flex-row-reverse\" >\r\n                <button className=\"btn btn-outline-danger btn-sm \"\r\n                  onClick={() => deleteProducto(producto.id)} ><FaTrash />\r\n                </button>\r\n                <button className=\"btn btn-outline-secondary btn-sm mr-2\"\r\n                  onClick={() => getProducto(producto.id)} ><FaPen />\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Query;\r\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport VerUsuarios from './componentes/VerUsuarios';\nimport CargaUsuario from './componentes/CargaUsuario';\nimport Query from './componentes/Query';\n\nexport default class App extends Component {\n\n state = {\n   ClaroOscuro :'dark'\n\n };\n\n  render() {\n    return (\n\n\n    <div className=\"app container\" className={this.state.ClaroOscuro}>\n    <Router>\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n        <a className=\"navbar-brand\">aLBERTOfERRO</a>\n        <br/>\n        <div className=\"btn-group container-fluid\">\n        \n          <NavLink to=\"/\" className=\"btn btn-dark\" activeClassName=\"active\">\n            Home\n          </NavLink>\n          <NavLink to=\"/query\" className=\"btn btn-dark\" activeClassName=\"active\">\n            Buscador Usuarios\n          </NavLink>\n          <NavLink to=\"/verusuarios\" className=\"btn btn-dark\" activeClassName=\"active\">\n            Ver Usuarios\n          </NavLink>\n          <NavLink to=\"/cargausuario\" className=\"btn btn-dark\" activeClassName=\"active\">\n            Cargar Usuarios\n          </NavLink>\n          <NavLink to=\"/contacto\" className=\"btn btn-dark\" activeClassName=\"active\">\n            Contactame\n          </NavLink>\n\n        </div>\n        </nav>\n        <hr/>\n        <div className=\"\">\n        <Switch>\n        <Route exact path=\"/\">\n         <h1> Bienvenido </h1>\n          <br>\n          </br>\n          <p>Esta es una prueba para la empresa CODESA</p>\n          </Route>\n        <Route path=\"/codesa\">\n         <h1> Bienvenido </h1>\n          <br>\n          </br>\n          <p>Esta es una prueba para la empresa CODESA</p>\n          </Route>\n          <Route path=\"/contacto\">\n            Soy Alberto Ferro <br/>\n            Escribeme al albertoferro@gmail.com <br/>\n            +57 317 6583417\n          </Route>\n          <Route path=\"/nosotros\">\n            Soy Alberto Ferro\n          </Route>\n          <Route path=\"/verusuarios\">\n            <VerUsuarios>\n              Aqui\n            </VerUsuarios>\n          </Route>\n          <Route path=\"/cargausuario\">\n            <CargaUsuario>\n            </CargaUsuario>\n          </Route>\n          <Route path=\"/query\">\n            <Query>\n            </Query>\n          </Route>\n          \n        </Switch>\n        </div>   \n        </div>   \n    </Router>\n\n    \n    </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //npm i bootstrap\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.unregister();\n"],"sourceRoot":""}